<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot">
	
	   <!-- This first link called "world" is empty -->
    <link name="my world"></link>
    
        <!-- The base origin is offset from the world origin. -->
    <joint name="base_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="my world"/>
        <child link="cube_frame"/>        
    </joint>
    
  <!-- Define properties for cube dimensions -->
  <xacro:property name="cube_length" value="1.0"/>    <!-- Length of the cube -->
  <xacro:property name="cube_girth" value="0.1"/>     <!-- Thickness of the edges -->

  <!-- Center coordinates of the cube -->
  <xacro:property name="cube_x" value="0.0"/>
  <xacro:property name="cube_y" value="0.0"/>
  <xacro:property name="cube_z" value="${cube_length / 2}"/> <!-- Half the cube length -->

	<!-- Define properties for the disk dimensions -->
  <xacro:property name="disk_radius" value="0.3"/>        <!-- Radius of the disk -->
  <xacro:property name="disk_thickness" value="0.1"/>     <!-- Thickness (height) of the disk -->
  
	<!-- Macro for defining a visual edge -->
  <xacro:macro name="visual_edge" params="edge x y z r p yaw">
    <visual name="${edge}">
      <origin xyz="${x} ${y} ${z}" rpy="${r} ${p} ${yaw}"/>
      <geometry>
        <box size="${cube_girth} ${cube_girth} ${cube_length}"/>
      </geometry>
      <material name="Black">
        <color rgba="0 0 0 1"/> <!-- Blue color with RGBA values -->
      </material>
      <!-- Material and other visual properties can be added here -->
    </visual>
  </xacro:macro>
  
  <!-- Macro for defining a disk link-->
  <xacro:macro name="disk_link_macro" params="name xyz rpy radius thickness">
    <link name="${name}">
      <!-- Visual element for the disk -->
      <visual name="disk">
        <origin xyz="${xyz}" rpy="${rpy}"/>
        <geometry>
          <cylinder radius="${radius}" length="${thickness}"/>
        </geometry>
        <material name="Blue">
          <color rgba="0 0 1 1"/> <!-- Orange color with RGBA values -->
        </material>
      </visual>
    
      <!-- Collision properties for the disk -->
      <collision name="disk_collision">
        <origin xyz="${xyz}" rpy="${rpy}"/>
        <geometry>
          <cylinder radius="${radius}" length="${thickness}"/>
        </geometry>
      </collision>

      <!-- Inertial properties for the disk -->
      <inertial>
        <origin xyz="${xyz}"/>
        <mass value="1"/>
        <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
      </inertial>
    </link>
  </xacro:macro>
  
  <!-- Main robot model -->
  <link name="cube_frame">
    <!-- Visual element for the main cube -->
    <xacro:visual_edge edge="ZXY" x="${(cube_length - cube_girth) / 2}" y="${cube_y+(cube_length - cube_girth) / 2}" z="${cube_z}" r="0" p="0" yaw="0"/>
	  <xacro:visual_edge edge="ZX_Y" x="${-(cube_length - cube_girth) / 2}" y="${cube_y+(cube_length - cube_girth) / 2}" z="${cube_z}" r="0" p="0" yaw="0"/>
	  <xacro:visual_edge edge="ZXY_" x="${(cube_length - cube_girth) / 2}" y="${cube_y-(cube_length - cube_girth) / 2}" z="${cube_z}" r="0" p="0" yaw="0"/>
	  <xacro:visual_edge edge="ZX_Y_" x="${-(cube_length - cube_girth) / 2}" y="${cube_y-(cube_length - cube_girth) / 2}" z="${cube_z}" r="0" p="0" yaw="0"/>
	 
	  <xacro:visual_edge edge="XYZ" y="${(cube_length - cube_girth) / 2}" z="${cube_z+(cube_length/2)-(cube_girth/2)}" x="${cube_x}" r="0" p="${pi/2}" yaw="0"/>
	  <xacro:visual_edge edge="XY_Z" y="${-(cube_length - cube_girth) / 2}" z="${cube_z+(cube_length/2)-(cube_girth/2)}" x="${cube_x}" r="0" p="${pi/2}" yaw="0"/>
	  <xacro:visual_edge edge="XYZ_" y="${(cube_length - cube_girth) / 2}" z="${cube_z-(cube_length/2)+(cube_girth/2)}" x="${cube_x}" r="0" p="${pi/2}" yaw="0"/>
	  <xacro:visual_edge edge="XY_Z_" y="${-(cube_length - cube_girth) / 2}" z="${cube_z-(cube_length/2)+(cube_girth/2)}" x="${cube_x}" r="0" p="${pi/2}" yaw="0"/>
	 
	  <xacro:visual_edge edge="YZX" z="${cube_z+(cube_length/2)-(cube_girth/2)}" x="${cube_x+(cube_length - cube_girth) / 2}" y="${cube_y}" r="${pi/2}" p="0" yaw="0"/>
	  <xacro:visual_edge edge="YZ_X" z="${cube_z-(cube_length/2)+(cube_girth/2)}" x="${cube_x+(cube_length - cube_girth) / 2}" y="${cube_y}" r="${pi/2}" p="0" yaw="0"/>
	  <xacro:visual_edge edge="YZX_" z="${cube_z+(cube_length/2)-(cube_girth/2)}" x="${cube_x-(cube_length - cube_girth) / 2}" y="${cube_y}" r="${pi/2}" p="0" yaw="0"/>
	  <xacro:visual_edge edge="YZ_X_" z="${cube_z-(cube_length/2)+(cube_girth/2)}" x="${cube_x-(cube_length - cube_girth) / 2}" y="${cube_y}" r="${pi/2}" p="0" yaw="0"/>
	 
    

    <!-- Collision properties for the main link -->
    <collision name="collision">
      <origin xyz="${cube_x} ${cube_y} ${cube_z}"/>
      <geometry>
        <box size="${cube_length} ${cube_length} ${cube_length}"/>
      </geometry>
    </collision>

    <!-- Inertial properties -->
    <inertial>
      <origin xyz="${cube_x} ${cube_y} ${cube_z}"/>
      <mass value="1.0"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
    </inertial>
  </link>


  <gazebo reference="ZXY">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="ZX_Y">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="ZXY_">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="ZX_Y_">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="XYZ">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="XY_Z">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="XYZ_">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="XY_Z_">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="YZX">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="YZ_X">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="YZX_">
      <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="YZ_X_">
      <material>Gazebo/Black</material>
    </gazebo>

  <!-- Defining the Three Disks -->
  <xacro:disk_link_macro name="disk_link_X" xyz="0 0 0" rpy="0 ${pi/2} 0" radius="${disk_radius}" thickness="${disk_thickness}"/>
  <xacro:disk_link_macro name="disk_link_Y" xyz="0 0 0" rpy="${pi/2} 0 0" radius="${disk_radius}" thickness="${disk_thickness}"/>
  <xacro:disk_link_macro name="disk_link_Z" xyz="0 0 0" rpy="0 0 0" radius="${disk_radius}" thickness="${disk_thickness}"/>


    <gazebo reference="disk_link_X">
      <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="disk_link_Y">
      <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="disk_link_Z">
      <material>Gazebo/Blue</material>
    </gazebo>

  <!-- Joint between cube_frame and disk_links -->
  <joint name="cube_disk_joint_X" type="continuous">
    <origin xyz="${cube_x+(cube_length/2)-disk_thickness} ${cube_y} ${cube_z}"/>
    <parent link="cube_frame"/>
    <child link="disk_link_X"/>        
    <axis xyz="1 0 0"/> <!-- Rotation axis along the z-axis (adjust as needed) -->
    <!--limit effort="100000.0" velocity="100000.0"/--> <!-- Joint effort and velocity limits (adjust as needed) -->
  </joint>
  
   <joint name="cube_disk_joint_Y" type="continuous">
    <origin xyz="${cube_x} ${cube_y+(cube_length/2)-disk_thickness} ${cube_z}"/>
    <parent link="cube_frame"/>
    <child link="disk_link_Y"/>        
    <axis xyz="0 1 0"/> <!-- Rotation axis along the z-axis (adjust as needed) -->
  </joint>
  
   <joint name="cube_disk_joint_Z" type="continuous">
    <origin xyz="${cube_x} ${cube_y} ${cube_z+(cube_length/2)-disk_thickness}"/>
    <parent link="cube_frame"/>
    <child link="disk_link_Z"/>        
    <axis xyz="0 0 1"/> <!-- Rotation axis along the z-axis (adjust as needed) -->
  </joint>


  <ros2_control name ="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="cube_disk_joint_X">
        <command_interface name="effort"/>
        <state_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="effort"/>
    </joint >
    <joint name="cube_disk_joint_Y">
        <command_interface name="effort"/>
        <state_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="effort"/>
    </joint >
    <joint name="cube_disk_joint_Z">
        <command_interface name="effort"/>
        <state_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="effort"/>
    </joint >
  </ros2_control>

  <gazebo>
    <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
    <parameters>$(find motion)/config/controllers.yaml</parameters>
    <robot_param>robot_description</robot_param>
    <robot_param_node>robot_state_publisher</robot_param_node>
    </plugin>
  </gazebo> 


</robot>